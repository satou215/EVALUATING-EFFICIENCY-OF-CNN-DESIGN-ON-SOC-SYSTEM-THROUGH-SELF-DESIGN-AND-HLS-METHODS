// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_a_Dense_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        sext_ln21_2,
        sext_ln21_4,
        sext_ln21_6,
        sext_ln21_8,
        sext_ln21_10,
        sext_ln21_12,
        sext_ln21_14,
        sext_ln21_16,
        sext_ln21_18,
        sext_ln21_20,
        sext_ln21_22,
        sext_ln21_24,
        sext_ln21_26,
        sext_ln21_28,
        sext_ln21_30,
        sext_ln21_32,
        sext_ln21_34,
        sext_ln21_36,
        sext_ln21_38,
        sext_ln21_39,
        out_Dense_address0,
        out_Dense_ce0,
        out_Dense_we0,
        out_Dense_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [15:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [15:0] Weights_q1;
input  [15:0] sext_ln21_2;
input  [15:0] sext_ln21_4;
input  [15:0] sext_ln21_6;
input  [15:0] sext_ln21_8;
input  [15:0] sext_ln21_10;
input  [15:0] sext_ln21_12;
input  [15:0] sext_ln21_14;
input  [15:0] sext_ln21_16;
input  [15:0] sext_ln21_18;
input  [15:0] sext_ln21_20;
input  [15:0] sext_ln21_22;
input  [15:0] sext_ln21_24;
input  [15:0] sext_ln21_26;
input  [15:0] sext_ln21_28;
input  [15:0] sext_ln21_30;
input  [15:0] sext_ln21_32;
input  [15:0] sext_ln21_34;
input  [15:0] sext_ln21_36;
input  [15:0] sext_ln21_38;
input  [15:0] sext_ln21_39;
output  [2:0] out_Dense_address0;
output   out_Dense_ce0;
output   out_Dense_we0;
output  [15:0] out_Dense_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln17_reg_1492;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg  signed [15:0] reg_448;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg  signed [15:0] reg_453;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg  signed [15:0] reg_458;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
reg  signed [15:0] reg_463;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire  signed [23:0] sext_ln21_39_cast_fu_468_p1;
reg  signed [23:0] sext_ln21_39_cast_reg_1384;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln21_38_cast_fu_472_p1;
reg  signed [23:0] sext_ln21_38_cast_reg_1389;
wire  signed [23:0] sext_ln21_36_cast_fu_476_p1;
reg  signed [23:0] sext_ln21_36_cast_reg_1394;
wire  signed [23:0] sext_ln21_34_cast_fu_480_p1;
reg  signed [23:0] sext_ln21_34_cast_reg_1399;
wire  signed [23:0] sext_ln21_32_cast_fu_484_p1;
reg  signed [23:0] sext_ln21_32_cast_reg_1404;
wire  signed [23:0] sext_ln21_30_cast_fu_488_p1;
reg  signed [23:0] sext_ln21_30_cast_reg_1409;
wire  signed [23:0] sext_ln21_28_cast_fu_492_p1;
reg  signed [23:0] sext_ln21_28_cast_reg_1414;
wire  signed [23:0] sext_ln21_26_cast_fu_496_p1;
reg  signed [23:0] sext_ln21_26_cast_reg_1419;
wire  signed [23:0] sext_ln21_24_cast_fu_500_p1;
reg  signed [23:0] sext_ln21_24_cast_reg_1424;
wire  signed [23:0] sext_ln21_22_cast_fu_504_p1;
reg  signed [23:0] sext_ln21_22_cast_reg_1429;
wire  signed [23:0] sext_ln21_20_cast_fu_508_p1;
reg  signed [23:0] sext_ln21_20_cast_reg_1434;
wire  signed [23:0] sext_ln21_18_cast_fu_512_p1;
reg  signed [23:0] sext_ln21_18_cast_reg_1439;
wire  signed [23:0] sext_ln21_16_cast_fu_516_p1;
reg  signed [23:0] sext_ln21_16_cast_reg_1444;
wire  signed [23:0] sext_ln21_14_cast_fu_520_p1;
reg  signed [23:0] sext_ln21_14_cast_reg_1449;
wire  signed [23:0] sext_ln21_12_cast_fu_524_p1;
reg  signed [23:0] sext_ln21_12_cast_reg_1454;
wire  signed [23:0] sext_ln21_10_cast_fu_528_p1;
reg  signed [23:0] sext_ln21_10_cast_reg_1459;
wire  signed [23:0] sext_ln21_8_cast_fu_532_p1;
reg  signed [23:0] sext_ln21_8_cast_reg_1464;
wire  signed [23:0] sext_ln21_6_cast_fu_536_p1;
reg  signed [23:0] sext_ln21_6_cast_reg_1469;
wire  signed [23:0] sext_ln21_4_cast_fu_540_p1;
reg  signed [23:0] sext_ln21_4_cast_reg_1474;
wire  signed [23:0] sext_ln21_2_cast_fu_544_p1;
reg  signed [23:0] sext_ln21_2_cast_reg_1479;
reg   [2:0] i_1_reg_1484;
reg   [2:0] i_1_reg_1484_pp0_iter1_reg;
wire   [0:0] icmp_ln17_fu_556_p2;
wire   [13:0] zext_ln17_2_fu_568_p1;
reg   [13:0] zext_ln17_2_reg_1496;
reg   [13:0] zext_ln17_2_reg_1496_pp0_iter1_reg;
reg   [15:0] tmp_s_reg_1541;
reg  signed [15:0] Weights_load_11_reg_1631;
reg  signed [15:0] Weights_load_13_reg_1656;
reg  signed [15:0] Weights_load_15_reg_1681;
reg  signed [15:0] Weights_load_17_reg_1706;
wire    ap_block_pp0_stage10_11001;
reg  signed [15:0] Weights_load_18_reg_1731;
reg  signed [15:0] Weights_load_19_reg_1736;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln21_1_fu_578_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln21_2_fu_589_p1;
wire   [63:0] zext_ln21_fu_610_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln21_3_fu_624_p1;
wire   [63:0] zext_ln21_4_fu_657_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln21_5_fu_667_p1;
wire   [63:0] zext_ln21_6_fu_688_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln21_7_fu_698_p1;
wire   [63:0] zext_ln21_8_fu_731_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln21_9_fu_741_p1;
wire   [63:0] zext_ln21_10_fu_772_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln21_11_fu_782_p1;
wire   [63:0] zext_ln21_12_fu_813_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln21_13_fu_823_p1;
wire   [63:0] zext_ln21_14_fu_854_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln21_15_fu_864_p1;
wire   [63:0] zext_ln21_17_fu_901_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln21_18_fu_911_p1;
wire   [63:0] zext_ln21_19_fu_942_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln21_20_fu_952_p1;
wire   [63:0] zext_ln23_fu_1200_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln17_fu_1205_p1;
reg   [2:0] i_fu_134;
wire   [2:0] add_ln17_fu_562_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_1;
reg    Weights_ce1_local;
reg   [13:0] Weights_address1_local;
reg    Weights_ce0_local;
reg   [13:0] Weights_address0_local;
reg    out_Dense_we0_local;
wire   [15:0] add_ln23_8_fu_1218_p2;
reg    out_Dense_ce0_local;
wire   [13:0] add_ln21_fu_572_p2;
wire   [13:0] add_ln21_2_fu_583_p2;
wire   [3:0] i_1_cast_fu_599_p1;
wire   [13:0] zext_ln21_cast_fu_602_p3;
wire   [13:0] add_ln21_4_fu_619_p2;
wire  signed [15:0] mul_ln21_fu_633_p1;
wire   [23:0] mul_ln21_fu_633_p2;
wire   [13:0] add_ln21_6_fu_652_p2;
wire   [13:0] add_ln21_8_fu_662_p2;
wire   [13:0] add_ln21_10_fu_683_p2;
wire   [13:0] add_ln21_12_fu_693_p2;
wire  signed [23:0] tmp_13_fu_703_p1;
wire   [23:0] grp_fu_1225_p3;
wire   [15:0] tmp_13_fu_703_p4;
wire   [13:0] zext_ln21_8_cast_fu_724_p3;
wire   [13:0] add_ln21_15_fu_736_p2;
wire  signed [23:0] tmp_14_fu_746_p1;
wire   [23:0] grp_fu_1233_p3;
wire   [15:0] tmp_14_fu_746_p4;
wire   [13:0] add_ln21_17_fu_767_p2;
wire   [13:0] add_ln21_19_fu_777_p2;
wire  signed [23:0] tmp_15_fu_787_p1;
wire   [23:0] grp_fu_1241_p3;
wire   [15:0] tmp_15_fu_787_p4;
wire   [13:0] add_ln21_21_fu_808_p2;
wire   [13:0] add_ln21_23_fu_818_p2;
wire  signed [23:0] tmp_16_fu_828_p1;
wire   [23:0] grp_fu_1249_p3;
wire   [15:0] tmp_16_fu_828_p4;
wire   [13:0] add_ln21_25_fu_849_p2;
wire   [13:0] add_ln21_27_fu_859_p2;
wire  signed [23:0] tmp_17_fu_869_p1;
wire   [23:0] grp_fu_1257_p3;
wire   [15:0] tmp_17_fu_869_p4;
wire   [4:0] zext_ln21_16_fu_890_p1;
wire   [13:0] zext_ln21_17_cast_fu_893_p3;
wire   [13:0] add_ln21_30_fu_906_p2;
wire  signed [23:0] tmp_18_fu_916_p1;
wire   [23:0] grp_fu_1265_p3;
wire   [15:0] tmp_18_fu_916_p4;
wire   [13:0] add_ln21_32_fu_937_p2;
wire   [13:0] add_ln21_34_fu_947_p2;
wire  signed [23:0] tmp_19_fu_957_p1;
wire   [23:0] grp_fu_1273_p3;
wire   [15:0] tmp_19_fu_957_p4;
wire  signed [23:0] tmp_20_fu_978_p1;
wire   [23:0] grp_fu_1281_p3;
wire   [15:0] tmp_20_fu_978_p4;
wire  signed [23:0] tmp_21_fu_998_p1;
wire   [23:0] grp_fu_1289_p3;
wire   [15:0] tmp_21_fu_998_p4;
wire  signed [23:0] tmp_22_fu_1019_p1;
wire   [23:0] grp_fu_1297_p3;
wire   [15:0] tmp_22_fu_1019_p4;
wire  signed [23:0] tmp_23_fu_1039_p1;
wire   [23:0] grp_fu_1305_p3;
wire   [15:0] tmp_23_fu_1039_p4;
wire  signed [23:0] tmp_24_fu_1060_p1;
wire   [23:0] grp_fu_1313_p3;
wire   [15:0] tmp_24_fu_1060_p4;
wire  signed [23:0] tmp_25_fu_1080_p1;
wire   [23:0] grp_fu_1321_p3;
wire   [15:0] tmp_25_fu_1080_p4;
wire  signed [23:0] tmp_26_fu_1101_p1;
wire   [23:0] grp_fu_1329_p3;
wire   [15:0] tmp_26_fu_1101_p4;
wire  signed [23:0] tmp_27_fu_1121_p1;
wire   [23:0] grp_fu_1337_p3;
wire   [15:0] tmp_27_fu_1121_p4;
wire  signed [23:0] tmp_28_fu_1141_p1;
wire   [23:0] grp_fu_1345_p3;
wire   [15:0] tmp_28_fu_1141_p4;
wire  signed [23:0] tmp_29_fu_1161_p1;
wire   [23:0] grp_fu_1353_p3;
wire   [15:0] tmp_29_fu_1161_p4;
wire  signed [23:0] tmp_30_fu_1178_p1;
wire   [23:0] grp_fu_1361_p3;
wire   [15:0] tmp_30_fu_1178_p4;
wire   [13:0] add_ln23_fu_1195_p2;
wire  signed [23:0] trunc_ln_fu_1209_p1;
wire   [23:0] grp_fu_1369_p3;
wire   [15:0] trunc_ln_fu_1209_p4;
wire  signed [15:0] grp_fu_1225_p1;
wire   [23:0] grp_fu_1225_p2;
wire  signed [15:0] grp_fu_1233_p1;
wire   [23:0] grp_fu_1233_p2;
wire  signed [15:0] grp_fu_1241_p1;
wire   [23:0] grp_fu_1241_p2;
wire  signed [15:0] grp_fu_1249_p1;
wire   [23:0] grp_fu_1249_p2;
wire  signed [15:0] grp_fu_1257_p1;
wire   [23:0] grp_fu_1257_p2;
wire  signed [15:0] grp_fu_1265_p1;
wire   [23:0] grp_fu_1265_p2;
wire  signed [15:0] grp_fu_1273_p1;
wire   [23:0] grp_fu_1273_p2;
wire  signed [15:0] grp_fu_1281_p1;
wire   [23:0] grp_fu_1281_p2;
wire  signed [15:0] grp_fu_1289_p1;
wire   [23:0] grp_fu_1289_p2;
wire  signed [15:0] grp_fu_1297_p1;
wire   [23:0] grp_fu_1297_p2;
wire  signed [15:0] grp_fu_1305_p1;
wire   [23:0] grp_fu_1305_p2;
wire  signed [15:0] grp_fu_1313_p1;
wire   [23:0] grp_fu_1313_p2;
wire  signed [15:0] grp_fu_1321_p1;
wire   [23:0] grp_fu_1321_p2;
wire  signed [15:0] grp_fu_1329_p1;
wire   [23:0] grp_fu_1329_p2;
wire  signed [15:0] grp_fu_1337_p1;
wire   [23:0] grp_fu_1337_p2;
wire  signed [15:0] grp_fu_1345_p1;
wire   [23:0] grp_fu_1345_p2;
wire  signed [15:0] grp_fu_1353_p1;
wire   [23:0] grp_fu_1353_p2;
wire  signed [15:0] grp_fu_1361_p1;
wire   [23:0] grp_fu_1361_p2;
wire  signed [15:0] grp_fu_1369_p1;
wire   [23:0] grp_fu_1369_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_134 = 3'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U483(
    .din0(Weights_q1),
    .din1(mul_ln21_fu_633_p1),
    .dout(mul_ln21_fu_633_p2)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U484(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_q1),
    .din1(grp_fu_1225_p1),
    .din2(grp_fu_1225_p2),
    .ce(1'b1),
    .dout(grp_fu_1225_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U485(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(grp_fu_1233_p1),
    .din2(grp_fu_1233_p2),
    .ce(1'b1),
    .dout(grp_fu_1233_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U486(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(grp_fu_1241_p1),
    .din2(grp_fu_1241_p2),
    .ce(1'b1),
    .dout(grp_fu_1241_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U487(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(grp_fu_1249_p1),
    .din2(grp_fu_1249_p2),
    .ce(1'b1),
    .dout(grp_fu_1249_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U488(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_453),
    .din1(grp_fu_1257_p1),
    .din2(grp_fu_1257_p2),
    .ce(1'b1),
    .dout(grp_fu_1257_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U489(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(grp_fu_1265_p1),
    .din2(grp_fu_1265_p2),
    .ce(1'b1),
    .dout(grp_fu_1265_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U490(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_458),
    .din1(grp_fu_1273_p1),
    .din2(grp_fu_1273_p2),
    .ce(1'b1),
    .dout(grp_fu_1273_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U491(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_453),
    .din1(grp_fu_1281_p1),
    .din2(grp_fu_1281_p2),
    .ce(1'b1),
    .dout(grp_fu_1281_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U492(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_463),
    .din1(grp_fu_1289_p1),
    .din2(grp_fu_1289_p2),
    .ce(1'b1),
    .dout(grp_fu_1289_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U493(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_448),
    .din1(grp_fu_1297_p1),
    .din2(grp_fu_1297_p2),
    .ce(1'b1),
    .dout(grp_fu_1297_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U494(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_11_reg_1631),
    .din1(grp_fu_1305_p1),
    .din2(grp_fu_1305_p2),
    .ce(1'b1),
    .dout(grp_fu_1305_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U495(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_458),
    .din1(grp_fu_1313_p1),
    .din2(grp_fu_1313_p2),
    .ce(1'b1),
    .dout(grp_fu_1313_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U496(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_13_reg_1656),
    .din1(grp_fu_1321_p1),
    .din2(grp_fu_1321_p2),
    .ce(1'b1),
    .dout(grp_fu_1321_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U497(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_453),
    .din1(grp_fu_1329_p1),
    .din2(grp_fu_1329_p2),
    .ce(1'b1),
    .dout(grp_fu_1329_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U498(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_15_reg_1681),
    .din1(grp_fu_1337_p1),
    .din2(grp_fu_1337_p2),
    .ce(1'b1),
    .dout(grp_fu_1337_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U499(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_463),
    .din1(grp_fu_1345_p1),
    .din2(grp_fu_1345_p2),
    .ce(1'b1),
    .dout(grp_fu_1345_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U500(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_17_reg_1706),
    .din1(grp_fu_1353_p1),
    .din2(grp_fu_1353_p2),
    .ce(1'b1),
    .dout(grp_fu_1353_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U501(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_18_reg_1731),
    .din1(grp_fu_1361_p1),
    .din2(grp_fu_1361_p2),
    .ce(1'b1),
    .dout(grp_fu_1361_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U502(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Weights_load_19_reg_1736),
    .din1(grp_fu_1369_p1),
    .din2(grp_fu_1369_p2),
    .ce(1'b1),
    .dout(grp_fu_1369_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_556_p2 == 1'd0))) begin
            i_fu_134 <= add_ln17_fu_562_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_134 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_448 <= Weights_q1;
    end else if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_448 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_453 <= Weights_q1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_453 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0_reg == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_458 <= Weights_q1;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_458 <= Weights_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0_reg == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_463 <= Weights_q1;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_463 <= Weights_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Weights_load_11_reg_1631 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Weights_load_13_reg_1656 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        Weights_load_15_reg_1681 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        Weights_load_17_reg_1706 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        Weights_load_18_reg_1731 <= Weights_q1;
        Weights_load_19_reg_1736 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1484 <= ap_sig_allocacmp_i_1;
        i_1_reg_1484_pp0_iter1_reg <= i_1_reg_1484;
        icmp_ln17_reg_1492 <= icmp_ln17_fu_556_p2;
        sext_ln21_10_cast_reg_1459 <= sext_ln21_10_cast_fu_528_p1;
        sext_ln21_12_cast_reg_1454 <= sext_ln21_12_cast_fu_524_p1;
        sext_ln21_14_cast_reg_1449 <= sext_ln21_14_cast_fu_520_p1;
        sext_ln21_16_cast_reg_1444 <= sext_ln21_16_cast_fu_516_p1;
        sext_ln21_18_cast_reg_1439 <= sext_ln21_18_cast_fu_512_p1;
        sext_ln21_20_cast_reg_1434 <= sext_ln21_20_cast_fu_508_p1;
        sext_ln21_22_cast_reg_1429 <= sext_ln21_22_cast_fu_504_p1;
        sext_ln21_24_cast_reg_1424 <= sext_ln21_24_cast_fu_500_p1;
        sext_ln21_26_cast_reg_1419 <= sext_ln21_26_cast_fu_496_p1;
        sext_ln21_28_cast_reg_1414 <= sext_ln21_28_cast_fu_492_p1;
        sext_ln21_2_cast_reg_1479 <= sext_ln21_2_cast_fu_544_p1;
        sext_ln21_30_cast_reg_1409 <= sext_ln21_30_cast_fu_488_p1;
        sext_ln21_32_cast_reg_1404 <= sext_ln21_32_cast_fu_484_p1;
        sext_ln21_34_cast_reg_1399 <= sext_ln21_34_cast_fu_480_p1;
        sext_ln21_36_cast_reg_1394 <= sext_ln21_36_cast_fu_476_p1;
        sext_ln21_38_cast_reg_1389 <= sext_ln21_38_cast_fu_472_p1;
        sext_ln21_39_cast_reg_1384 <= sext_ln21_39_cast_fu_468_p1;
        sext_ln21_4_cast_reg_1474 <= sext_ln21_4_cast_fu_540_p1;
        sext_ln21_6_cast_reg_1469 <= sext_ln21_6_cast_fu_536_p1;
        sext_ln21_8_cast_reg_1464 <= sext_ln21_8_cast_fu_532_p1;
        zext_ln17_2_reg_1496[2 : 0] <= zext_ln17_2_fu_568_p1[2 : 0];
        zext_ln17_2_reg_1496_pp0_iter1_reg[2 : 0] <= zext_ln17_2_reg_1496[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_s_reg_1541 <= {{mul_ln21_fu_633_p2[23:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        Weights_address0_local = zext_ln23_fu_1200_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        Weights_address0_local = zext_ln21_20_fu_952_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        Weights_address0_local = zext_ln21_18_fu_911_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Weights_address0_local = zext_ln21_15_fu_864_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Weights_address0_local = zext_ln21_13_fu_823_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        Weights_address0_local = zext_ln21_11_fu_782_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Weights_address0_local = zext_ln21_9_fu_741_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Weights_address0_local = zext_ln21_7_fu_698_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_address0_local = zext_ln21_5_fu_667_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_address0_local = zext_ln21_3_fu_624_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_address0_local = zext_ln21_2_fu_589_p1;
    end else begin
        Weights_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        Weights_address1_local = zext_ln21_19_fu_942_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        Weights_address1_local = zext_ln21_17_fu_901_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Weights_address1_local = zext_ln21_14_fu_854_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Weights_address1_local = zext_ln21_12_fu_813_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        Weights_address1_local = zext_ln21_10_fu_772_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Weights_address1_local = zext_ln21_8_fu_731_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Weights_address1_local = zext_ln21_6_fu_688_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_address1_local = zext_ln21_4_fu_657_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_address1_local = zext_ln21_fu_610_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_address1_local = zext_ln21_1_fu_578_p1;
    end else begin
        Weights_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 
    == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Weights_ce0_local = 1'b1;
    end else begin
        Weights_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 
    == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Weights_ce1_local = 1'b1;
    end else begin
        Weights_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1492 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1492 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_Dense_ce0_local = 1'b1;
    end else begin
        out_Dense_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_Dense_we0_local = 1'b1;
    end else begin
        out_Dense_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Weights_address0 = Weights_address0_local;

assign Weights_address1 = Weights_address1_local;

assign Weights_ce0 = Weights_ce0_local;

assign Weights_ce1 = Weights_ce1_local;

assign add_ln17_fu_562_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign add_ln21_10_fu_683_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd10990));

assign add_ln21_12_fu_693_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd10995));

assign add_ln21_15_fu_736_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11005));

assign add_ln21_17_fu_767_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11010));

assign add_ln21_19_fu_777_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11015));

assign add_ln21_21_fu_808_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11020));

assign add_ln21_23_fu_818_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11025));

assign add_ln21_25_fu_849_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11030));

assign add_ln21_27_fu_859_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11035));

assign add_ln21_2_fu_583_p2 = ($signed(zext_ln17_2_fu_568_p1) + $signed(14'd10970));

assign add_ln21_30_fu_906_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11045));

assign add_ln21_32_fu_937_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11050));

assign add_ln21_34_fu_947_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd11055));

assign add_ln21_4_fu_619_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd10975));

assign add_ln21_6_fu_652_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd10980));

assign add_ln21_8_fu_662_p2 = ($signed(zext_ln17_2_reg_1496) + $signed(14'd10985));

assign add_ln21_fu_572_p2 = ($signed(zext_ln17_2_fu_568_p1) + $signed(14'd10965));

assign add_ln23_8_fu_1218_p2 = (Weights_q0 + trunc_ln_fu_1209_p4);

assign add_ln23_fu_1195_p2 = ($signed(zext_ln17_2_reg_1496_pp0_iter1_reg) + $signed(14'd11060));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign ap_ready = ap_ready_sig;

assign grp_fu_1225_p1 = sext_ln21_4_cast_reg_1474;

assign grp_fu_1225_p2 = {{tmp_s_reg_1541}, {8'd0}};

assign grp_fu_1233_p1 = sext_ln21_6_cast_reg_1469;

assign grp_fu_1233_p2 = {{tmp_13_fu_703_p4}, {8'd0}};

assign grp_fu_1241_p1 = sext_ln21_8_cast_reg_1464;

assign grp_fu_1241_p2 = {{tmp_14_fu_746_p4}, {8'd0}};

assign grp_fu_1249_p1 = sext_ln21_10_cast_reg_1459;

assign grp_fu_1249_p2 = {{tmp_15_fu_787_p4}, {8'd0}};

assign grp_fu_1257_p1 = sext_ln21_12_cast_reg_1454;

assign grp_fu_1257_p2 = {{tmp_16_fu_828_p4}, {8'd0}};

assign grp_fu_1265_p1 = sext_ln21_14_cast_reg_1449;

assign grp_fu_1265_p2 = {{tmp_17_fu_869_p4}, {8'd0}};

assign grp_fu_1273_p1 = sext_ln21_16_cast_reg_1444;

assign grp_fu_1273_p2 = {{tmp_18_fu_916_p4}, {8'd0}};

assign grp_fu_1281_p1 = sext_ln21_18_cast_reg_1439;

assign grp_fu_1281_p2 = {{tmp_19_fu_957_p4}, {8'd0}};

assign grp_fu_1289_p1 = sext_ln21_20_cast_reg_1434;

assign grp_fu_1289_p2 = {{tmp_20_fu_978_p4}, {8'd0}};

assign grp_fu_1297_p1 = sext_ln21_22_cast_reg_1429;

assign grp_fu_1297_p2 = {{tmp_21_fu_998_p4}, {8'd0}};

assign grp_fu_1305_p1 = sext_ln21_24_cast_reg_1424;

assign grp_fu_1305_p2 = {{tmp_22_fu_1019_p4}, {8'd0}};

assign grp_fu_1313_p1 = sext_ln21_26_cast_reg_1419;

assign grp_fu_1313_p2 = {{tmp_23_fu_1039_p4}, {8'd0}};

assign grp_fu_1321_p1 = sext_ln21_28_cast_reg_1414;

assign grp_fu_1321_p2 = {{tmp_24_fu_1060_p4}, {8'd0}};

assign grp_fu_1329_p1 = sext_ln21_30_cast_reg_1409;

assign grp_fu_1329_p2 = {{tmp_25_fu_1080_p4}, {8'd0}};

assign grp_fu_1337_p1 = sext_ln21_32_cast_reg_1404;

assign grp_fu_1337_p2 = {{tmp_26_fu_1101_p4}, {8'd0}};

assign grp_fu_1345_p1 = sext_ln21_34_cast_reg_1399;

assign grp_fu_1345_p2 = {{tmp_27_fu_1121_p4}, {8'd0}};

assign grp_fu_1353_p1 = sext_ln21_36_cast_reg_1394;

assign grp_fu_1353_p2 = {{tmp_28_fu_1141_p4}, {8'd0}};

assign grp_fu_1361_p1 = sext_ln21_38_cast_reg_1389;

assign grp_fu_1361_p2 = {{tmp_29_fu_1161_p4}, {8'd0}};

assign grp_fu_1369_p1 = sext_ln21_39_cast_reg_1384;

assign grp_fu_1369_p2 = {{tmp_30_fu_1178_p4}, {8'd0}};

assign i_1_cast_fu_599_p1 = i_1_reg_1484;

assign icmp_ln17_fu_556_p2 = ((ap_sig_allocacmp_i_1 == 3'd5) ? 1'b1 : 1'b0);

assign mul_ln21_fu_633_p1 = sext_ln21_2_cast_reg_1479;

assign out_Dense_address0 = zext_ln17_fu_1205_p1;

assign out_Dense_ce0 = out_Dense_ce0_local;

assign out_Dense_d0 = add_ln23_8_fu_1218_p2;

assign out_Dense_we0 = out_Dense_we0_local;

assign sext_ln21_10_cast_fu_528_p1 = $signed(sext_ln21_10);

assign sext_ln21_12_cast_fu_524_p1 = $signed(sext_ln21_12);

assign sext_ln21_14_cast_fu_520_p1 = $signed(sext_ln21_14);

assign sext_ln21_16_cast_fu_516_p1 = $signed(sext_ln21_16);

assign sext_ln21_18_cast_fu_512_p1 = $signed(sext_ln21_18);

assign sext_ln21_20_cast_fu_508_p1 = $signed(sext_ln21_20);

assign sext_ln21_22_cast_fu_504_p1 = $signed(sext_ln21_22);

assign sext_ln21_24_cast_fu_500_p1 = $signed(sext_ln21_24);

assign sext_ln21_26_cast_fu_496_p1 = $signed(sext_ln21_26);

assign sext_ln21_28_cast_fu_492_p1 = $signed(sext_ln21_28);

assign sext_ln21_2_cast_fu_544_p1 = $signed(sext_ln21_2);

assign sext_ln21_30_cast_fu_488_p1 = $signed(sext_ln21_30);

assign sext_ln21_32_cast_fu_484_p1 = $signed(sext_ln21_32);

assign sext_ln21_34_cast_fu_480_p1 = $signed(sext_ln21_34);

assign sext_ln21_36_cast_fu_476_p1 = $signed(sext_ln21_36);

assign sext_ln21_38_cast_fu_472_p1 = $signed(sext_ln21_38);

assign sext_ln21_39_cast_fu_468_p1 = $signed(sext_ln21_39);

assign sext_ln21_4_cast_fu_540_p1 = $signed(sext_ln21_4);

assign sext_ln21_6_cast_fu_536_p1 = $signed(sext_ln21_6);

assign sext_ln21_8_cast_fu_532_p1 = $signed(sext_ln21_8);

assign tmp_13_fu_703_p1 = grp_fu_1225_p3;

assign tmp_13_fu_703_p4 = {{tmp_13_fu_703_p1[23:8]}};

assign tmp_14_fu_746_p1 = grp_fu_1233_p3;

assign tmp_14_fu_746_p4 = {{tmp_14_fu_746_p1[23:8]}};

assign tmp_15_fu_787_p1 = grp_fu_1241_p3;

assign tmp_15_fu_787_p4 = {{tmp_15_fu_787_p1[23:8]}};

assign tmp_16_fu_828_p1 = grp_fu_1249_p3;

assign tmp_16_fu_828_p4 = {{tmp_16_fu_828_p1[23:8]}};

assign tmp_17_fu_869_p1 = grp_fu_1257_p3;

assign tmp_17_fu_869_p4 = {{tmp_17_fu_869_p1[23:8]}};

assign tmp_18_fu_916_p1 = grp_fu_1265_p3;

assign tmp_18_fu_916_p4 = {{tmp_18_fu_916_p1[23:8]}};

assign tmp_19_fu_957_p1 = grp_fu_1273_p3;

assign tmp_19_fu_957_p4 = {{tmp_19_fu_957_p1[23:8]}};

assign tmp_20_fu_978_p1 = grp_fu_1281_p3;

assign tmp_20_fu_978_p4 = {{tmp_20_fu_978_p1[23:8]}};

assign tmp_21_fu_998_p1 = grp_fu_1289_p3;

assign tmp_21_fu_998_p4 = {{tmp_21_fu_998_p1[23:8]}};

assign tmp_22_fu_1019_p1 = grp_fu_1297_p3;

assign tmp_22_fu_1019_p4 = {{tmp_22_fu_1019_p1[23:8]}};

assign tmp_23_fu_1039_p1 = grp_fu_1305_p3;

assign tmp_23_fu_1039_p4 = {{tmp_23_fu_1039_p1[23:8]}};

assign tmp_24_fu_1060_p1 = grp_fu_1313_p3;

assign tmp_24_fu_1060_p4 = {{tmp_24_fu_1060_p1[23:8]}};

assign tmp_25_fu_1080_p1 = grp_fu_1321_p3;

assign tmp_25_fu_1080_p4 = {{tmp_25_fu_1080_p1[23:8]}};

assign tmp_26_fu_1101_p1 = grp_fu_1329_p3;

assign tmp_26_fu_1101_p4 = {{tmp_26_fu_1101_p1[23:8]}};

assign tmp_27_fu_1121_p1 = grp_fu_1337_p3;

assign tmp_27_fu_1121_p4 = {{tmp_27_fu_1121_p1[23:8]}};

assign tmp_28_fu_1141_p1 = grp_fu_1345_p3;

assign tmp_28_fu_1141_p4 = {{tmp_28_fu_1141_p1[23:8]}};

assign tmp_29_fu_1161_p1 = grp_fu_1353_p3;

assign tmp_29_fu_1161_p4 = {{tmp_29_fu_1161_p1[23:8]}};

assign tmp_30_fu_1178_p1 = grp_fu_1361_p3;

assign tmp_30_fu_1178_p4 = {{tmp_30_fu_1178_p1[23:8]}};

assign trunc_ln_fu_1209_p1 = grp_fu_1369_p3;

assign trunc_ln_fu_1209_p4 = {{trunc_ln_fu_1209_p1[23:8]}};

assign zext_ln17_2_fu_568_p1 = ap_sig_allocacmp_i_1;

assign zext_ln17_fu_1205_p1 = i_1_reg_1484_pp0_iter1_reg;

assign zext_ln21_10_fu_772_p1 = add_ln21_17_fu_767_p2;

assign zext_ln21_11_fu_782_p1 = add_ln21_19_fu_777_p2;

assign zext_ln21_12_fu_813_p1 = add_ln21_21_fu_808_p2;

assign zext_ln21_13_fu_823_p1 = add_ln21_23_fu_818_p2;

assign zext_ln21_14_fu_854_p1 = add_ln21_25_fu_849_p2;

assign zext_ln21_15_fu_864_p1 = add_ln21_27_fu_859_p2;

assign zext_ln21_16_fu_890_p1 = i_1_reg_1484;

assign zext_ln21_17_cast_fu_893_p3 = {{9'd345}, {zext_ln21_16_fu_890_p1}};

assign zext_ln21_17_fu_901_p1 = zext_ln21_17_cast_fu_893_p3;

assign zext_ln21_18_fu_911_p1 = add_ln21_30_fu_906_p2;

assign zext_ln21_19_fu_942_p1 = add_ln21_32_fu_937_p2;

assign zext_ln21_1_fu_578_p1 = add_ln21_fu_572_p2;

assign zext_ln21_20_fu_952_p1 = add_ln21_34_fu_947_p2;

assign zext_ln21_2_fu_589_p1 = add_ln21_2_fu_583_p2;

assign zext_ln21_3_fu_624_p1 = add_ln21_4_fu_619_p2;

assign zext_ln21_4_fu_657_p1 = add_ln21_6_fu_652_p2;

assign zext_ln21_5_fu_667_p1 = add_ln21_8_fu_662_p2;

assign zext_ln21_6_fu_688_p1 = add_ln21_10_fu_683_p2;

assign zext_ln21_7_fu_698_p1 = add_ln21_12_fu_693_p2;

assign zext_ln21_8_cast_fu_724_p3 = {{11'd1375}, {i_1_reg_1484}};

assign zext_ln21_8_fu_731_p1 = zext_ln21_8_cast_fu_724_p3;

assign zext_ln21_9_fu_741_p1 = add_ln21_15_fu_736_p2;

assign zext_ln21_cast_fu_602_p3 = {{10'd685}, {i_1_cast_fu_599_p1}};

assign zext_ln21_fu_610_p1 = zext_ln21_cast_fu_602_p3;

assign zext_ln23_fu_1200_p1 = add_ln23_fu_1195_p2;

always @ (posedge ap_clk) begin
    zext_ln17_2_reg_1496[13:3] <= 11'b00000000000;
    zext_ln17_2_reg_1496_pp0_iter1_reg[13:3] <= 11'b00000000000;
end

endmodule //CNN_CNN_Pipeline_loop_for_a_Dense_1
