// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_3_channel_pad_7_loop_for_channel_pad_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OutPadConv7_address0,
        OutPadConv7_ce0,
        OutPadConv7_we0,
        OutPadConv7_d0,
        OutConv6_address0,
        OutConv6_ce0,
        OutConv6_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] OutPadConv7_address0;
output   OutPadConv7_ce0;
output   OutPadConv7_we0;
output  [15:0] OutPadConv7_d0;
output  [10:0] OutConv6_address0;
output   OutConv6_ce0;
input  [15:0] OutConv6_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln187_fu_112_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] select_ln187_fu_136_p3;
reg   [5:0] select_ln187_reg_306;
reg   [5:0] select_ln187_reg_306_pp0_iter1_reg;
wire   [5:0] select_ln187_1_fu_150_p3;
reg   [5:0] select_ln187_1_reg_313;
reg   [5:0] select_ln187_1_reg_313_pp0_iter1_reg;
wire   [0:0] icmp_ln190_fu_172_p2;
reg   [0:0] icmp_ln190_reg_324;
reg   [0:0] icmp_ln190_reg_324_pp0_iter1_reg;
wire   [0:0] or_ln190_fu_234_p2;
reg   [0:0] or_ln190_reg_334;
wire   [63:0] zext_ln190_1_fu_255_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln190_fu_260_p1;
reg   [5:0] n_fu_56;
wire   [5:0] add_ln189_fu_178_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_n_load;
reg   [5:0] c_fu_60;
reg   [5:0] ap_sig_allocacmp_c_load;
reg   [10:0] indvar_flatten147_fu_64;
wire   [10:0] add_ln187_fu_118_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten147_load;
reg    OutConv6_ce0_local;
reg    OutPadConv7_we0_local;
wire   [15:0] storemerge609_fu_264_p3;
reg    OutPadConv7_ce0_local;
wire   [0:0] icmp_ln189_fu_130_p2;
wire   [5:0] add_ln187_1_fu_144_p2;
wire   [4:0] tmp_10_fu_162_p4;
wire   [8:0] tmp_fu_206_p3;
wire   [10:0] p_shl_fu_199_p3;
wire   [10:0] zext_ln189_2_fu_213_p1;
wire   [0:0] icmp_ln190_1_fu_229_p2;
wire   [6:0] zext_ln189_1_fu_226_p1;
wire   [6:0] add_ln190_1_fu_239_p2;
wire  signed [10:0] sext_ln190_fu_245_p1;
wire   [10:0] add_ln189_1_fu_217_p2;
wire   [10:0] add_ln190_2_fu_249_p2;
wire   [10:0] grp_fu_272_p3;
wire   [5:0] grp_fu_272_p0;
wire   [5:0] grp_fu_272_p1;
wire   [5:0] grp_fu_272_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [10:0] grp_fu_272_p00;
wire   [10:0] grp_fu_272_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 n_fu_56 = 6'd0;
#0 c_fu_60 = 6'd0;
#0 indvar_flatten147_fu_64 = 11'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mac_muladd_6ns_6ns_6ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mac_muladd_6ns_6ns_6ns_11_4_1_U374(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_272_p0),
    .din1(grp_fu_272_p1),
    .din2(grp_fu_272_p2),
    .ce(1'b1),
    .dout(grp_fu_272_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln187_fu_112_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c_fu_60 <= select_ln187_1_fu_150_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_60 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln187_fu_112_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten147_fu_64 <= add_ln187_fu_118_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten147_fu_64 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln187_fu_112_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n_fu_56 <= add_ln189_fu_178_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_56 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln190_reg_324 <= icmp_ln190_fu_172_p2;
        icmp_ln190_reg_324_pp0_iter1_reg <= icmp_ln190_reg_324;
        select_ln187_1_reg_313 <= select_ln187_1_fu_150_p3;
        select_ln187_1_reg_313_pp0_iter1_reg <= select_ln187_1_reg_313;
        select_ln187_reg_306 <= select_ln187_fu_136_p3;
        select_ln187_reg_306_pp0_iter1_reg <= select_ln187_reg_306;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_ln190_reg_334 <= or_ln190_fu_234_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        OutConv6_ce0_local = 1'b1;
    end else begin
        OutConv6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        OutPadConv7_ce0_local = 1'b1;
    end else begin
        OutPadConv7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        OutPadConv7_we0_local = 1'b1;
    end else begin
        OutPadConv7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln187_fu_112_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c_load = 6'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten147_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten147_load = indvar_flatten147_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n_load = 6'd0;
    end else begin
        ap_sig_allocacmp_n_load = n_fu_56;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv6_address0 = zext_ln190_1_fu_255_p1;

assign OutConv6_ce0 = OutConv6_ce0_local;

assign OutPadConv7_address0 = zext_ln190_fu_260_p1;

assign OutPadConv7_ce0 = OutPadConv7_ce0_local;

assign OutPadConv7_d0 = storemerge609_fu_264_p3;

assign OutPadConv7_we0 = OutPadConv7_we0_local;

assign add_ln187_1_fu_144_p2 = (ap_sig_allocacmp_c_load + 6'd1);

assign add_ln187_fu_118_p2 = (ap_sig_allocacmp_indvar_flatten147_load + 11'd1);

assign add_ln189_1_fu_217_p2 = (p_shl_fu_199_p3 + zext_ln189_2_fu_213_p1);

assign add_ln189_fu_178_p2 = (select_ln187_fu_136_p3 + 6'd1);

assign add_ln190_1_fu_239_p2 = ($signed(zext_ln189_1_fu_226_p1) + $signed(7'd126));

assign add_ln190_2_fu_249_p2 = ($signed(sext_ln190_fu_245_p1) + $signed(add_ln189_1_fu_217_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_272_p0 = grp_fu_272_p00;

assign grp_fu_272_p00 = select_ln187_1_fu_150_p3;

assign grp_fu_272_p1 = 11'd44;

assign grp_fu_272_p2 = grp_fu_272_p20;

assign grp_fu_272_p20 = select_ln187_reg_306_pp0_iter1_reg;

assign icmp_ln187_fu_112_p2 = ((ap_sig_allocacmp_indvar_flatten147_load == 11'd1408) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_130_p2 = ((ap_sig_allocacmp_n_load == 6'd44) ? 1'b1 : 1'b0);

assign icmp_ln190_1_fu_229_p2 = ((select_ln187_reg_306_pp0_iter1_reg > 6'd41) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_172_p2 = ((tmp_10_fu_162_p4 == 5'd0) ? 1'b1 : 1'b0);

assign or_ln190_fu_234_p2 = (icmp_ln190_reg_324_pp0_iter1_reg | icmp_ln190_1_fu_229_p2);

assign p_shl_fu_199_p3 = {{select_ln187_1_reg_313_pp0_iter1_reg}, {5'd0}};

assign select_ln187_1_fu_150_p3 = ((icmp_ln189_fu_130_p2[0:0] == 1'b1) ? add_ln187_1_fu_144_p2 : ap_sig_allocacmp_c_load);

assign select_ln187_fu_136_p3 = ((icmp_ln189_fu_130_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_n_load);

assign sext_ln190_fu_245_p1 = $signed(add_ln190_1_fu_239_p2);

assign storemerge609_fu_264_p3 = ((or_ln190_reg_334[0:0] == 1'b1) ? 16'd0 : OutConv6_q0);

assign tmp_10_fu_162_p4 = {{select_ln187_fu_136_p3[5:1]}};

assign tmp_fu_206_p3 = {{select_ln187_1_reg_313_pp0_iter1_reg}, {3'd0}};

assign zext_ln189_1_fu_226_p1 = select_ln187_reg_306_pp0_iter1_reg;

assign zext_ln189_2_fu_213_p1 = tmp_fu_206_p3;

assign zext_ln190_1_fu_255_p1 = add_ln190_2_fu_249_p2;

assign zext_ln190_fu_260_p1 = grp_fu_272_p3;

endmodule //CNN_CNN_Pipeline_loop_for_3_channel_pad_7_loop_for_channel_pad_7
