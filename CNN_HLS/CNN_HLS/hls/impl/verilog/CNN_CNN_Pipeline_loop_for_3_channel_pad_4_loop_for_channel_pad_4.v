// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_3_channel_pad_4_loop_for_channel_pad_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OutPadConv4_2_address0,
        OutPadConv4_2_ce0,
        OutPadConv4_2_we0,
        OutPadConv4_2_d0,
        OutPadConv4_1_address0,
        OutPadConv4_1_ce0,
        OutPadConv4_1_we0,
        OutPadConv4_1_d0,
        OutPadConv4_address0,
        OutPadConv4_ce0,
        OutPadConv4_we0,
        OutPadConv4_d0,
        OutPool1_address0,
        OutPool1_ce0,
        OutPool1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] OutPadConv4_2_address0;
output   OutPadConv4_2_ce0;
output   OutPadConv4_2_we0;
output  [15:0] OutPadConv4_2_d0;
output  [7:0] OutPadConv4_1_address0;
output   OutPadConv4_1_ce0;
output   OutPadConv4_1_we0;
output  [15:0] OutPadConv4_1_d0;
output  [7:0] OutPadConv4_address0;
output   OutPadConv4_ce0;
output   OutPadConv4_we0;
output  [15:0] OutPadConv4_d0;
output  [9:0] OutPool1_address0;
output   OutPool1_ce0;
input  [15:0] OutPool1_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_162_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln111_fu_177_p2;
reg   [0:0] icmp_ln111_reg_422;
reg   [0:0] icmp_ln111_reg_422_pp0_iter1_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter2_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter3_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter4_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter5_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter6_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter7_reg;
reg   [0:0] icmp_ln111_reg_422_pp0_iter8_reg;
wire   [6:0] select_ln109_fu_183_p3;
reg   [6:0] select_ln109_reg_427;
reg   [6:0] select_ln109_reg_427_pp0_iter1_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter2_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter3_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter4_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter5_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter6_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter7_reg;
reg   [6:0] select_ln109_reg_427_pp0_iter8_reg;
wire   [0:0] icmp_ln112_fu_201_p2;
reg   [0:0] icmp_ln112_reg_435;
reg   [0:0] icmp_ln112_reg_435_pp0_iter1_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter2_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter3_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter4_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter5_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter6_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter7_reg;
reg   [0:0] icmp_ln112_reg_435_pp0_iter8_reg;
wire   [0:0] or_ln112_fu_309_p2;
reg   [0:0] or_ln112_reg_440;
wire   [7:0] add_ln112_fu_337_p2;
reg   [7:0] add_ln112_reg_445;
wire   [63:0] zext_ln112_2_fu_359_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln112_1_fu_369_p1;
reg   [6:0] n_fu_80;
wire   [6:0] add_ln111_fu_213_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_n_load;
reg   [3:0] c_fu_84;
wire   [3:0] select_ln109_1_fu_238_p3;
reg   [9:0] indvar_flatten58_fu_88;
wire   [9:0] add_ln109_fu_168_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten58_load;
reg    OutPool1_ce0_local;
reg    OutPadConv4_1_we0_local;
wire   [1:0] trunc_ln112_fu_375_p1;
wire   [15:0] storemerge583_fu_379_p3;
reg    OutPadConv4_1_ce0_local;
reg    OutPadConv4_we0_local;
reg    OutPadConv4_ce0_local;
reg    OutPadConv4_2_we0_local;
reg    OutPadConv4_2_ce0_local;
wire   [5:0] tmp_14_fu_191_p4;
wire   [2:0] grp_fu_207_p1;
wire   [3:0] add_ln109_1_fu_232_p2;
wire   [7:0] tmp_fu_253_p3;
wire   [9:0] p_shl7_fu_245_p3;
wire   [9:0] p_shl8_fu_261_p1;
wire   [2:0] trunc_ln111_fu_271_p1;
wire   [5:0] tmp_13_fu_283_p3;
wire   [7:0] p_shl_fu_275_p3;
wire   [7:0] zext_ln111_fu_291_p1;
wire   [0:0] icmp_ln112_1_fu_304_p2;
wire   [6:0] mul_ln112_fu_317_p0;
wire   [8:0] mul_ln112_fu_317_p1;
wire   [14:0] mul_ln112_fu_317_p2;
wire   [5:0] tmp_15_fu_323_p4;
wire   [7:0] zext_ln112_fu_333_p1;
wire   [7:0] sub_ln111_fu_295_p2;
wire   [7:0] zext_ln111_1_fu_301_p1;
wire   [7:0] add_ln112_1_fu_343_p2;
wire  signed [9:0] sext_ln112_fu_349_p1;
wire   [9:0] empty_fu_265_p2;
wire   [9:0] add_ln112_2_fu_353_p2;
wire   [1:0] grp_fu_207_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [14:0] mul_ln112_fu_317_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 n_fu_80 = 7'd0;
#0 c_fu_84 = 4'd0;
#0 indvar_flatten58_fu_88 = 10'd0;
#0 ap_done_reg = 1'b0;
end

CNN_urem_7ns_3ns_2_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_1_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln109_fu_183_p3),
    .din1(grp_fu_207_p1),
    .ce(1'b1),
    .dout(grp_fu_207_p2)
);

CNN_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U242(
    .din0(mul_ln112_fu_317_p0),
    .din1(mul_ln112_fu_317_p1),
    .dout(mul_ln112_fu_317_p2)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c_fu_84 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            c_fu_84 <= select_ln109_1_fu_238_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln109_fu_162_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten58_fu_88 <= add_ln109_fu_168_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten58_fu_88 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln109_fu_162_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n_fu_80 <= add_ln111_fu_213_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_80 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln112_reg_445 <= add_ln112_fu_337_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln111_reg_422_pp0_iter2_reg <= icmp_ln111_reg_422_pp0_iter1_reg;
        icmp_ln111_reg_422_pp0_iter3_reg <= icmp_ln111_reg_422_pp0_iter2_reg;
        icmp_ln111_reg_422_pp0_iter4_reg <= icmp_ln111_reg_422_pp0_iter3_reg;
        icmp_ln111_reg_422_pp0_iter5_reg <= icmp_ln111_reg_422_pp0_iter4_reg;
        icmp_ln111_reg_422_pp0_iter6_reg <= icmp_ln111_reg_422_pp0_iter5_reg;
        icmp_ln111_reg_422_pp0_iter7_reg <= icmp_ln111_reg_422_pp0_iter6_reg;
        icmp_ln111_reg_422_pp0_iter8_reg <= icmp_ln111_reg_422_pp0_iter7_reg;
        icmp_ln112_reg_435_pp0_iter2_reg <= icmp_ln112_reg_435_pp0_iter1_reg;
        icmp_ln112_reg_435_pp0_iter3_reg <= icmp_ln112_reg_435_pp0_iter2_reg;
        icmp_ln112_reg_435_pp0_iter4_reg <= icmp_ln112_reg_435_pp0_iter3_reg;
        icmp_ln112_reg_435_pp0_iter5_reg <= icmp_ln112_reg_435_pp0_iter4_reg;
        icmp_ln112_reg_435_pp0_iter6_reg <= icmp_ln112_reg_435_pp0_iter5_reg;
        icmp_ln112_reg_435_pp0_iter7_reg <= icmp_ln112_reg_435_pp0_iter6_reg;
        icmp_ln112_reg_435_pp0_iter8_reg <= icmp_ln112_reg_435_pp0_iter7_reg;
        or_ln112_reg_440 <= or_ln112_fu_309_p2;
        select_ln109_reg_427_pp0_iter2_reg <= select_ln109_reg_427_pp0_iter1_reg;
        select_ln109_reg_427_pp0_iter3_reg <= select_ln109_reg_427_pp0_iter2_reg;
        select_ln109_reg_427_pp0_iter4_reg <= select_ln109_reg_427_pp0_iter3_reg;
        select_ln109_reg_427_pp0_iter5_reg <= select_ln109_reg_427_pp0_iter4_reg;
        select_ln109_reg_427_pp0_iter6_reg <= select_ln109_reg_427_pp0_iter5_reg;
        select_ln109_reg_427_pp0_iter7_reg <= select_ln109_reg_427_pp0_iter6_reg;
        select_ln109_reg_427_pp0_iter8_reg <= select_ln109_reg_427_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln111_reg_422 <= icmp_ln111_fu_177_p2;
        icmp_ln111_reg_422_pp0_iter1_reg <= icmp_ln111_reg_422;
        icmp_ln112_reg_435 <= icmp_ln112_fu_201_p2;
        icmp_ln112_reg_435_pp0_iter1_reg <= icmp_ln112_reg_435;
        select_ln109_reg_427 <= select_ln109_fu_183_p3;
        select_ln109_reg_427_pp0_iter1_reg <= select_ln109_reg_427;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OutPadConv4_1_ce0_local = 1'b1;
    end else begin
        OutPadConv4_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln112_fu_375_p1 == 2'd1))) begin
        OutPadConv4_1_we0_local = 1'b1;
    end else begin
        OutPadConv4_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OutPadConv4_2_ce0_local = 1'b1;
    end else begin
        OutPadConv4_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln112_fu_375_p1 == 2'd0) & ~(trunc_ln112_fu_375_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OutPadConv4_2_we0_local = 1'b1;
    end else begin
        OutPadConv4_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        OutPadConv4_ce0_local = 1'b1;
    end else begin
        OutPadConv4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln112_fu_375_p1 == 2'd0))) begin
        OutPadConv4_we0_local = 1'b1;
    end else begin
        OutPadConv4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        OutPool1_ce0_local = 1'b1;
    end else begin
        OutPool1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_162_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten58_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten58_load = indvar_flatten58_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_load = 7'd0;
    end else begin
        ap_sig_allocacmp_n_load = n_fu_80;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutPadConv4_1_address0 = zext_ln112_1_fu_369_p1;

assign OutPadConv4_1_ce0 = OutPadConv4_1_ce0_local;

assign OutPadConv4_1_d0 = storemerge583_fu_379_p3;

assign OutPadConv4_1_we0 = OutPadConv4_1_we0_local;

assign OutPadConv4_2_address0 = zext_ln112_1_fu_369_p1;

assign OutPadConv4_2_ce0 = OutPadConv4_2_ce0_local;

assign OutPadConv4_2_d0 = storemerge583_fu_379_p3;

assign OutPadConv4_2_we0 = OutPadConv4_2_we0_local;

assign OutPadConv4_address0 = zext_ln112_1_fu_369_p1;

assign OutPadConv4_ce0 = OutPadConv4_ce0_local;

assign OutPadConv4_d0 = storemerge583_fu_379_p3;

assign OutPadConv4_we0 = OutPadConv4_we0_local;

assign OutPool1_address0 = zext_ln112_2_fu_359_p1;

assign OutPool1_ce0 = OutPool1_ce0_local;

assign add_ln109_1_fu_232_p2 = (c_fu_84 + 4'd1);

assign add_ln109_fu_168_p2 = (ap_sig_allocacmp_indvar_flatten58_load + 10'd1);

assign add_ln111_fu_213_p2 = (select_ln109_fu_183_p3 + 7'd1);

assign add_ln112_1_fu_343_p2 = ($signed(zext_ln111_1_fu_301_p1) + $signed(8'd254));

assign add_ln112_2_fu_353_p2 = ($signed(sext_ln112_fu_349_p1) + $signed(empty_fu_265_p2));

assign add_ln112_fu_337_p2 = (zext_ln112_fu_333_p1 + sub_ln111_fu_295_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign empty_fu_265_p2 = (p_shl7_fu_245_p3 + p_shl8_fu_261_p1);

assign grp_fu_207_p1 = 7'd3;

assign icmp_ln109_fu_162_p2 = ((ap_sig_allocacmp_indvar_flatten58_load == 10'd672) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_177_p2 = ((ap_sig_allocacmp_n_load == 7'd84) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_304_p2 = ((select_ln109_reg_427_pp0_iter8_reg > 7'd81) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_201_p2 = ((tmp_14_fu_191_p4 == 6'd0) ? 1'b1 : 1'b0);

assign mul_ln112_fu_317_p0 = mul_ln112_fu_317_p00;

assign mul_ln112_fu_317_p00 = select_ln109_reg_427_pp0_iter8_reg;

assign mul_ln112_fu_317_p1 = 15'd171;

assign or_ln112_fu_309_p2 = (icmp_ln112_reg_435_pp0_iter8_reg | icmp_ln112_1_fu_304_p2);

assign p_shl7_fu_245_p3 = {{select_ln109_1_fu_238_p3}, {6'd0}};

assign p_shl8_fu_261_p1 = tmp_fu_253_p3;

assign p_shl_fu_275_p3 = {{trunc_ln111_fu_271_p1}, {5'd0}};

assign select_ln109_1_fu_238_p3 = ((icmp_ln111_reg_422_pp0_iter8_reg[0:0] == 1'b1) ? add_ln109_1_fu_232_p2 : c_fu_84);

assign select_ln109_fu_183_p3 = ((icmp_ln111_fu_177_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_n_load);

assign sext_ln112_fu_349_p1 = $signed(add_ln112_1_fu_343_p2);

assign storemerge583_fu_379_p3 = ((or_ln112_reg_440[0:0] == 1'b1) ? 16'd0 : OutPool1_q0);

assign sub_ln111_fu_295_p2 = (p_shl_fu_275_p3 - zext_ln111_fu_291_p1);

assign tmp_13_fu_283_p3 = {{select_ln109_1_fu_238_p3}, {2'd0}};

assign tmp_14_fu_191_p4 = {{select_ln109_fu_183_p3[6:1]}};

assign tmp_15_fu_323_p4 = {{mul_ln112_fu_317_p2[14:9]}};

assign tmp_fu_253_p3 = {{select_ln109_1_fu_238_p3}, {4'd0}};

assign trunc_ln111_fu_271_p1 = select_ln109_1_fu_238_p3[2:0];

assign trunc_ln112_fu_375_p1 = grp_fu_207_p2[1:0];

assign zext_ln111_1_fu_301_p1 = select_ln109_reg_427_pp0_iter8_reg;

assign zext_ln111_fu_291_p1 = tmp_13_fu_283_p3;

assign zext_ln112_1_fu_369_p1 = add_ln112_reg_445;

assign zext_ln112_2_fu_359_p1 = add_ln112_2_fu_353_p2;

assign zext_ln112_fu_333_p1 = tmp_15_fu_323_p4;

endmodule //CNN_CNN_Pipeline_loop_for_3_channel_pad_4_loop_for_channel_pad_4
