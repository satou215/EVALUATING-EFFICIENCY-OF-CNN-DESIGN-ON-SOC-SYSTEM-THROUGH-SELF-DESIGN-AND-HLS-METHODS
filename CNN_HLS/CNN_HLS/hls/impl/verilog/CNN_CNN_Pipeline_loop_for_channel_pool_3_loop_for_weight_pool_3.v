// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_channel_pool_3_loop_for_weight_pool_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OutPool3_9_address0,
        OutPool3_9_ce0,
        OutPool3_9_we0,
        OutPool3_9_d0,
        OutPool3_8_address0,
        OutPool3_8_ce0,
        OutPool3_8_we0,
        OutPool3_8_d0,
        OutPool3_7_address0,
        OutPool3_7_ce0,
        OutPool3_7_we0,
        OutPool3_7_d0,
        OutPool3_6_address0,
        OutPool3_6_ce0,
        OutPool3_6_we0,
        OutPool3_6_d0,
        OutPool3_5_address0,
        OutPool3_5_ce0,
        OutPool3_5_we0,
        OutPool3_5_d0,
        OutPool3_4_address0,
        OutPool3_4_ce0,
        OutPool3_4_we0,
        OutPool3_4_d0,
        OutPool3_3_address0,
        OutPool3_3_ce0,
        OutPool3_3_we0,
        OutPool3_3_d0,
        OutPool3_2_address0,
        OutPool3_2_ce0,
        OutPool3_2_we0,
        OutPool3_2_d0,
        OutPool3_1_address0,
        OutPool3_1_ce0,
        OutPool3_1_we0,
        OutPool3_1_d0,
        OutPool3_address0,
        OutPool3_ce0,
        OutPool3_we0,
        OutPool3_d0,
        OutConv7_address0,
        OutConv7_ce0,
        OutConv7_q0,
        OutConv7_address1,
        OutConv7_ce1,
        OutConv7_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] OutPool3_9_address0;
output   OutPool3_9_ce0;
output   OutPool3_9_we0;
output  [15:0] OutPool3_9_d0;
output  [5:0] OutPool3_8_address0;
output   OutPool3_8_ce0;
output   OutPool3_8_we0;
output  [15:0] OutPool3_8_d0;
output  [5:0] OutPool3_7_address0;
output   OutPool3_7_ce0;
output   OutPool3_7_we0;
output  [15:0] OutPool3_7_d0;
output  [5:0] OutPool3_6_address0;
output   OutPool3_6_ce0;
output   OutPool3_6_we0;
output  [15:0] OutPool3_6_d0;
output  [5:0] OutPool3_5_address0;
output   OutPool3_5_ce0;
output   OutPool3_5_we0;
output  [15:0] OutPool3_5_d0;
output  [5:0] OutPool3_4_address0;
output   OutPool3_4_ce0;
output   OutPool3_4_we0;
output  [15:0] OutPool3_4_d0;
output  [5:0] OutPool3_3_address0;
output   OutPool3_3_ce0;
output   OutPool3_3_we0;
output  [15:0] OutPool3_3_d0;
output  [5:0] OutPool3_2_address0;
output   OutPool3_2_ce0;
output   OutPool3_2_we0;
output  [15:0] OutPool3_2_d0;
output  [5:0] OutPool3_1_address0;
output   OutPool3_1_ce0;
output   OutPool3_1_we0;
output  [15:0] OutPool3_1_d0;
output  [5:0] OutPool3_address0;
output   OutPool3_ce0;
output   OutPool3_we0;
output  [15:0] OutPool3_d0;
output  [10:0] OutConv7_address0;
output   OutConv7_ce0;
input  [15:0] OutConv7_q0;
output  [10:0] OutConv7_address1;
output   OutConv7_ce1;
input  [15:0] OutConv7_q1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln74_fu_289_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln77_fu_304_p2;
reg   [0:0] icmp_ln77_reg_575;
reg   [0:0] icmp_ln77_reg_575_pp0_iter1_reg;
reg   [0:0] icmp_ln77_reg_575_pp0_iter2_reg;
reg   [0:0] icmp_ln77_reg_575_pp0_iter3_reg;
reg   [0:0] icmp_ln77_reg_575_pp0_iter4_reg;
reg   [0:0] icmp_ln77_reg_575_pp0_iter5_reg;
reg   [0:0] icmp_ln77_reg_575_pp0_iter6_reg;
wire   [4:0] select_ln74_fu_310_p3;
reg   [4:0] select_ln74_reg_580;
reg   [4:0] select_ln74_reg_580_pp0_iter1_reg;
reg   [4:0] select_ln74_reg_580_pp0_iter2_reg;
reg   [4:0] select_ln74_reg_580_pp0_iter3_reg;
reg   [4:0] select_ln74_reg_580_pp0_iter4_reg;
reg   [4:0] select_ln74_reg_580_pp0_iter5_reg;
reg   [4:0] select_ln74_reg_580_pp0_iter6_reg;
wire   [5:0] add_ln86_fu_462_p2;
reg   [5:0] add_ln86_reg_597;
wire   [63:0] zext_ln82_fu_423_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln82_1_fu_434_p1;
wire   [63:0] zext_ln86_2_fu_511_p1;
reg   [4:0] y_fu_104;
wire   [4:0] add_ln87_fu_324_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_y_load;
reg   [5:0] z_fu_108;
wire   [5:0] select_ln74_1_fu_349_p3;
reg   [9:0] indvar_flatten181_fu_112;
wire   [9:0] add_ln74_fu_295_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten181_load;
reg    OutConv7_ce1_local;
reg    OutConv7_ce0_local;
reg    OutPool3_8_we0_local;
wire   [3:0] trunc_ln86_fu_524_p1;
wire   [15:0] max_1_fu_493_p3;
reg    OutPool3_8_ce0_local;
reg    OutPool3_7_we0_local;
reg    OutPool3_7_ce0_local;
reg    OutPool3_6_we0_local;
reg    OutPool3_6_ce0_local;
reg    OutPool3_5_we0_local;
reg    OutPool3_5_ce0_local;
reg    OutPool3_4_we0_local;
reg    OutPool3_4_ce0_local;
reg    OutPool3_3_we0_local;
reg    OutPool3_3_ce0_local;
reg    OutPool3_2_we0_local;
reg    OutPool3_2_ce0_local;
reg    OutPool3_1_we0_local;
reg    OutPool3_1_ce0_local;
reg    OutPool3_we0_local;
reg    OutPool3_ce0_local;
reg    OutPool3_9_we0_local;
reg    OutPool3_9_ce0_local;
wire   [5:0] add_ln74_1_fu_343_p2;
wire   [8:0] tmp_fu_364_p3;
wire   [10:0] p_shl_fu_356_p3;
wire   [10:0] p_shl4_fu_372_p1;
wire   [10:0] empty_fu_376_p2;
wire   [9:0] tmp_s_fu_382_p4;
wire   [5:0] tmp_2_fu_406_p3;
wire   [10:0] zext_ln81_fu_413_p1;
wire   [10:0] add_ln81_fu_417_p2;
wire   [10:0] tmp_1_fu_392_p3;
wire   [10:0] add_ln81_1_fu_428_p2;
wire   [4:0] mul_ln86_fu_442_p0;
wire   [6:0] mul_ln86_fu_442_p1;
wire   [10:0] mul_ln86_fu_442_p2;
wire   [1:0] tmp_3_fu_448_p4;
wire   [5:0] zext_ln86_1_fu_458_p1;
wire   [5:0] empty_192_fu_400_p2;
wire   [0:0] icmp_ln83_fu_473_p2;
wire   [15:0] max_fu_479_p3;
wire   [0:0] icmp_ln83_1_fu_487_p2;
wire   [3:0] grp_fu_318_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [10:0] mul_ln86_fu_442_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 y_fu_104 = 5'd0;
#0 z_fu_108 = 6'd0;
#0 indvar_flatten181_fu_112 = 10'd0;
#0 ap_done_reg = 1'b0;
end

CNN_urem_5ns_5ns_4_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
urem_5ns_5ns_4_9_1_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln74_fu_310_p3),
    .din1(5'd10),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

CNN_mul_5ns_7ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_5ns_7ns_11_1_1_U388(
    .din0(mul_ln86_fu_442_p0),
    .din1(mul_ln86_fu_442_p1),
    .dout(mul_ln86_fu_442_p2)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_289_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten181_fu_112 <= add_ln74_fu_295_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten181_fu_112 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_289_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            y_fu_104 <= add_ln87_fu_324_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_104 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            z_fu_108 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            z_fu_108 <= select_ln74_1_fu_349_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln86_reg_597 <= add_ln86_fu_462_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        icmp_ln77_reg_575_pp0_iter2_reg <= icmp_ln77_reg_575_pp0_iter1_reg;
        icmp_ln77_reg_575_pp0_iter3_reg <= icmp_ln77_reg_575_pp0_iter2_reg;
        icmp_ln77_reg_575_pp0_iter4_reg <= icmp_ln77_reg_575_pp0_iter3_reg;
        icmp_ln77_reg_575_pp0_iter5_reg <= icmp_ln77_reg_575_pp0_iter4_reg;
        icmp_ln77_reg_575_pp0_iter6_reg <= icmp_ln77_reg_575_pp0_iter5_reg;
        select_ln74_reg_580_pp0_iter2_reg <= select_ln74_reg_580_pp0_iter1_reg;
        select_ln74_reg_580_pp0_iter3_reg <= select_ln74_reg_580_pp0_iter2_reg;
        select_ln74_reg_580_pp0_iter4_reg <= select_ln74_reg_580_pp0_iter3_reg;
        select_ln74_reg_580_pp0_iter5_reg <= select_ln74_reg_580_pp0_iter4_reg;
        select_ln74_reg_580_pp0_iter6_reg <= select_ln74_reg_580_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln77_reg_575 <= icmp_ln77_fu_304_p2;
        icmp_ln77_reg_575_pp0_iter1_reg <= icmp_ln77_reg_575;
        select_ln74_reg_580 <= select_ln74_fu_310_p3;
        select_ln74_reg_580_pp0_iter1_reg <= select_ln74_reg_580;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        OutConv7_ce0_local = 1'b1;
    end else begin
        OutConv7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        OutConv7_ce1_local = 1'b1;
    end else begin
        OutConv7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_1_ce0_local = 1'b1;
    end else begin
        OutPool3_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd1))) begin
        OutPool3_1_we0_local = 1'b1;
    end else begin
        OutPool3_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_2_ce0_local = 1'b1;
    end else begin
        OutPool3_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd2))) begin
        OutPool3_2_we0_local = 1'b1;
    end else begin
        OutPool3_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_3_ce0_local = 1'b1;
    end else begin
        OutPool3_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd3))) begin
        OutPool3_3_we0_local = 1'b1;
    end else begin
        OutPool3_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_4_ce0_local = 1'b1;
    end else begin
        OutPool3_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd4))) begin
        OutPool3_4_we0_local = 1'b1;
    end else begin
        OutPool3_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_5_ce0_local = 1'b1;
    end else begin
        OutPool3_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd5))) begin
        OutPool3_5_we0_local = 1'b1;
    end else begin
        OutPool3_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_6_ce0_local = 1'b1;
    end else begin
        OutPool3_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd6))) begin
        OutPool3_6_we0_local = 1'b1;
    end else begin
        OutPool3_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_7_ce0_local = 1'b1;
    end else begin
        OutPool3_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd7))) begin
        OutPool3_7_we0_local = 1'b1;
    end else begin
        OutPool3_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_8_ce0_local = 1'b1;
    end else begin
        OutPool3_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd8))) begin
        OutPool3_8_we0_local = 1'b1;
    end else begin
        OutPool3_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_9_ce0_local = 1'b1;
    end else begin
        OutPool3_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln86_fu_524_p1 == 4'd0) & ~(trunc_ln86_fu_524_p1 == 4'd1) & ~(trunc_ln86_fu_524_p1 == 4'd2) & ~(trunc_ln86_fu_524_p1 == 4'd3) & ~(trunc_ln86_fu_524_p1 == 4'd4) & ~(trunc_ln86_fu_524_p1 == 4'd5) & ~(trunc_ln86_fu_524_p1 == 4'd6) & ~(trunc_ln86_fu_524_p1 == 4'd7) & ~(trunc_ln86_fu_524_p1 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_9_we0_local = 1'b1;
    end else begin
        OutPool3_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        OutPool3_ce0_local = 1'b1;
    end else begin
        OutPool3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln86_fu_524_p1 == 4'd0))) begin
        OutPool3_we0_local = 1'b1;
    end else begin
        OutPool3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_289_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten181_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten181_load = indvar_flatten181_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_load = 5'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_104;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv7_address0 = zext_ln82_1_fu_434_p1;

assign OutConv7_address1 = zext_ln82_fu_423_p1;

assign OutConv7_ce0 = OutConv7_ce0_local;

assign OutConv7_ce1 = OutConv7_ce1_local;

assign OutPool3_1_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_1_ce0 = OutPool3_1_ce0_local;

assign OutPool3_1_d0 = max_1_fu_493_p3;

assign OutPool3_1_we0 = OutPool3_1_we0_local;

assign OutPool3_2_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_2_ce0 = OutPool3_2_ce0_local;

assign OutPool3_2_d0 = max_1_fu_493_p3;

assign OutPool3_2_we0 = OutPool3_2_we0_local;

assign OutPool3_3_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_3_ce0 = OutPool3_3_ce0_local;

assign OutPool3_3_d0 = max_1_fu_493_p3;

assign OutPool3_3_we0 = OutPool3_3_we0_local;

assign OutPool3_4_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_4_ce0 = OutPool3_4_ce0_local;

assign OutPool3_4_d0 = max_1_fu_493_p3;

assign OutPool3_4_we0 = OutPool3_4_we0_local;

assign OutPool3_5_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_5_ce0 = OutPool3_5_ce0_local;

assign OutPool3_5_d0 = max_1_fu_493_p3;

assign OutPool3_5_we0 = OutPool3_5_we0_local;

assign OutPool3_6_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_6_ce0 = OutPool3_6_ce0_local;

assign OutPool3_6_d0 = max_1_fu_493_p3;

assign OutPool3_6_we0 = OutPool3_6_we0_local;

assign OutPool3_7_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_7_ce0 = OutPool3_7_ce0_local;

assign OutPool3_7_d0 = max_1_fu_493_p3;

assign OutPool3_7_we0 = OutPool3_7_we0_local;

assign OutPool3_8_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_8_ce0 = OutPool3_8_ce0_local;

assign OutPool3_8_d0 = max_1_fu_493_p3;

assign OutPool3_8_we0 = OutPool3_8_we0_local;

assign OutPool3_9_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_9_ce0 = OutPool3_9_ce0_local;

assign OutPool3_9_d0 = max_1_fu_493_p3;

assign OutPool3_9_we0 = OutPool3_9_we0_local;

assign OutPool3_address0 = zext_ln86_2_fu_511_p1;

assign OutPool3_ce0 = OutPool3_ce0_local;

assign OutPool3_d0 = max_1_fu_493_p3;

assign OutPool3_we0 = OutPool3_we0_local;

assign add_ln74_1_fu_343_p2 = (z_fu_108 + 6'd1);

assign add_ln74_fu_295_p2 = (ap_sig_allocacmp_indvar_flatten181_load + 10'd1);

assign add_ln81_1_fu_428_p2 = (zext_ln81_fu_413_p1 + tmp_1_fu_392_p3);

assign add_ln81_fu_417_p2 = (zext_ln81_fu_413_p1 + empty_fu_376_p2);

assign add_ln86_fu_462_p2 = (zext_ln86_1_fu_458_p1 + empty_192_fu_400_p2);

assign add_ln87_fu_324_p2 = (select_ln74_fu_310_p3 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign empty_192_fu_400_p2 = select_ln74_1_fu_349_p3 << 6'd1;

assign empty_fu_376_p2 = (p_shl_fu_356_p3 + p_shl4_fu_372_p1);

assign icmp_ln74_fu_289_p2 = ((ap_sig_allocacmp_indvar_flatten181_load == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_304_p2 = ((ap_sig_allocacmp_y_load == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_487_p2 = (($signed(OutConv7_q0) > $signed(max_fu_479_p3)) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_473_p2 = (($signed(OutConv7_q1) > $signed(16'd62976)) ? 1'b1 : 1'b0);

assign max_1_fu_493_p3 = ((icmp_ln83_1_fu_487_p2[0:0] == 1'b1) ? OutConv7_q0 : max_fu_479_p3);

assign max_fu_479_p3 = ((icmp_ln83_fu_473_p2[0:0] == 1'b1) ? OutConv7_q1 : 16'd62976);

assign mul_ln86_fu_442_p0 = mul_ln86_fu_442_p00;

assign mul_ln86_fu_442_p00 = select_ln74_reg_580_pp0_iter6_reg;

assign mul_ln86_fu_442_p1 = 11'd52;

assign p_shl4_fu_372_p1 = tmp_fu_364_p3;

assign p_shl_fu_356_p3 = {{select_ln74_1_fu_349_p3}, {5'd0}};

assign select_ln74_1_fu_349_p3 = ((icmp_ln77_reg_575_pp0_iter6_reg[0:0] == 1'b1) ? add_ln74_1_fu_343_p2 : z_fu_108);

assign select_ln74_fu_310_p3 = ((icmp_ln77_fu_304_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_y_load);

assign tmp_1_fu_392_p3 = {{tmp_s_fu_382_p4}, {1'd1}};

assign tmp_2_fu_406_p3 = {{select_ln74_reg_580_pp0_iter6_reg}, {1'd0}};

assign tmp_3_fu_448_p4 = {{mul_ln86_fu_442_p2[10:9]}};

assign tmp_fu_364_p3 = {{select_ln74_1_fu_349_p3}, {3'd0}};

assign tmp_s_fu_382_p4 = {{empty_fu_376_p2[10:1]}};

assign trunc_ln86_fu_524_p1 = grp_fu_318_p2[3:0];

assign zext_ln81_fu_413_p1 = tmp_2_fu_406_p3;

assign zext_ln82_1_fu_434_p1 = add_ln81_1_fu_428_p2;

assign zext_ln82_fu_423_p1 = add_ln81_fu_417_p2;

assign zext_ln86_1_fu_458_p1 = tmp_3_fu_448_p4;

assign zext_ln86_2_fu_511_p1 = add_ln86_reg_597;

endmodule //CNN_CNN_Pipeline_loop_for_channel_pool_3_loop_for_weight_pool_3
