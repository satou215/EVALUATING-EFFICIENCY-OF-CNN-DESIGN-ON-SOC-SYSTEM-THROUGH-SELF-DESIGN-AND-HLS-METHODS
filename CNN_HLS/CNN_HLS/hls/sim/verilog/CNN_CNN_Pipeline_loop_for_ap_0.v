// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_ap_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OutPadConv0_address0,
        OutPadConv0_ce0,
        OutPadConv0_q0,
        OutPadConv0_address1,
        OutPadConv0_ce1,
        OutPadConv0_q1,
        OutPadConv0_address2,
        OutPadConv0_ce2,
        OutPadConv0_q2,
        OutPadConv0_address3,
        OutPadConv0_ce3,
        OutPadConv0_q3,
        OutPadConv0_address4,
        OutPadConv0_ce4,
        OutPadConv0_q4,
        sext_ln23_2,
        sext_ln23_4,
        sext_ln23_6,
        sext_ln23_8,
        sext_ln23_9,
        conv_i_i16_i86_i,
        p_cast41_cast,
        OutConv0_address0,
        OutConv0_ce0,
        OutConv0_we0,
        OutConv0_d0,
        Weights_load
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] OutPadConv0_address0;
output   OutPadConv0_ce0;
input  [15:0] OutPadConv0_q0;
output  [8:0] OutPadConv0_address1;
output   OutPadConv0_ce1;
input  [15:0] OutPadConv0_q1;
output  [8:0] OutPadConv0_address2;
output   OutPadConv0_ce2;
input  [15:0] OutPadConv0_q2;
output  [8:0] OutPadConv0_address3;
output   OutPadConv0_ce3;
input  [15:0] OutPadConv0_q3;
output  [8:0] OutPadConv0_address4;
output   OutPadConv0_ce4;
input  [15:0] OutPadConv0_q4;
input  [15:0] sext_ln23_2;
input  [15:0] sext_ln23_4;
input  [15:0] sext_ln23_6;
input  [15:0] sext_ln23_8;
input  [15:0] sext_ln23_9;
input  [15:0] conv_i_i16_i86_i;
input  [9:0] p_cast41_cast;
output  [10:0] OutConv0_address0;
output   OutConv0_ce0;
output   OutConv0_we0;
output  [15:0] OutConv0_d0;
input  [15:0] Weights_load;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln17_fu_234_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [10:0] p_cast41_cast_cast_fu_198_p1;
reg   [10:0] p_cast41_cast_cast_reg_481;
wire  signed [16:0] conv_i_i16_i86_i_cast_fu_202_p1;
reg  signed [16:0] conv_i_i16_i86_i_cast_reg_486;
wire  signed [23:0] sext_ln23_9_cast_fu_206_p1;
reg  signed [23:0] sext_ln23_9_cast_reg_491;
wire  signed [23:0] sext_ln23_8_cast_fu_210_p1;
reg  signed [23:0] sext_ln23_8_cast_reg_496;
wire  signed [23:0] sext_ln23_6_cast_fu_214_p1;
reg  signed [23:0] sext_ln23_6_cast_reg_501;
wire  signed [23:0] sext_ln23_4_cast_fu_218_p1;
reg  signed [23:0] sext_ln23_4_cast_reg_506;
wire  signed [23:0] sext_ln23_2_cast_fu_222_p1;
reg  signed [23:0] sext_ln23_2_cast_reg_511;
reg   [8:0] y_1_reg_516;
reg   [8:0] y_1_reg_516_pp0_iter1_reg;
reg   [8:0] y_1_reg_516_pp0_iter2_reg;
reg   [8:0] y_1_reg_516_pp0_iter3_reg;
reg   [8:0] y_1_reg_516_pp0_iter4_reg;
reg   [8:0] y_1_reg_516_pp0_iter5_reg;
reg   [8:0] y_1_reg_516_pp0_iter6_reg;
reg   [15:0] tmp_s_reg_555;
reg   [15:0] tmp_s_reg_555_pp0_iter2_reg;
reg  signed [15:0] OutPadConv0_load_2_reg_560;
reg   [15:0] OutPadConv0_load_3_reg_565;
reg  signed [15:0] OutPadConv0_load_3_reg_565_pp0_iter2_reg;
reg   [15:0] OutPadConv0_load_4_reg_570;
reg   [15:0] OutPadConv0_load_4_reg_570_pp0_iter2_reg;
reg  signed [15:0] OutPadConv0_load_4_reg_570_pp0_iter3_reg;
wire   [63:0] zext_ln17_fu_246_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln23_fu_251_p1;
wire   [63:0] zext_ln23_1_fu_262_p1;
wire   [63:0] zext_ln23_2_fu_273_p1;
wire   [63:0] zext_ln23_3_fu_284_p1;
wire   [63:0] zext_ln25_fu_418_p1;
reg   [8:0] y_fu_72;
wire   [8:0] add_ln23_fu_240_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_y_1;
reg    OutPadConv0_ce4_local;
reg    OutPadConv0_ce3_local;
reg    OutPadConv0_ce2_local;
reg    OutPadConv0_ce1_local;
reg    OutPadConv0_ce0_local;
reg    OutConv0_we0_local;
wire   [15:0] select_ln25_fu_428_p3;
reg    OutConv0_ce0_local;
wire   [8:0] add_ln23_2_fu_256_p2;
wire   [8:0] add_ln23_4_fu_267_p2;
wire   [8:0] add_ln23_6_fu_278_p2;
wire  signed [15:0] mul_ln23_fu_298_p1;
wire   [23:0] mul_ln23_fu_298_p2;
wire  signed [23:0] tmp_10_fu_330_p1;
wire   [23:0] grp_fu_437_p3;
wire   [15:0] tmp_10_fu_330_p4;
wire  signed [23:0] tmp_11_fu_350_p1;
wire   [23:0] grp_fu_445_p3;
wire   [15:0] tmp_11_fu_350_p4;
wire  signed [23:0] tmp_12_fu_367_p1;
wire   [23:0] grp_fu_453_p3;
wire   [15:0] tmp_12_fu_367_p4;
wire  signed [23:0] trunc_ln1_fu_387_p1;
wire   [23:0] grp_fu_461_p3;
wire  signed [15:0] trunc_ln1_fu_387_p4;
wire  signed [16:0] sext_ln25_fu_396_p1;
wire   [16:0] add_ln25_fu_400_p2;
wire   [10:0] zext_ln17_1_fu_384_p1;
wire   [10:0] add_ln25_1_fu_413_p2;
wire   [0:0] tmp_fu_405_p3;
wire   [15:0] add_ln25_2_fu_423_p2;
wire  signed [15:0] grp_fu_437_p1;
wire   [23:0] grp_fu_437_p2;
wire  signed [15:0] grp_fu_445_p1;
wire   [23:0] grp_fu_445_p2;
wire  signed [15:0] grp_fu_453_p1;
wire   [23:0] grp_fu_453_p2;
wire  signed [15:0] grp_fu_461_p1;
wire   [23:0] grp_fu_461_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 y_fu_72 = 9'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U3(
    .din0(OutPadConv0_q4),
    .din1(mul_ln23_fu_298_p1),
    .dout(mul_ln23_fu_298_p2)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv0_q3),
    .din1(grp_fu_437_p1),
    .din2(grp_fu_437_p2),
    .ce(1'b1),
    .dout(grp_fu_437_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv0_load_2_reg_560),
    .din1(grp_fu_445_p1),
    .din2(grp_fu_445_p2),
    .ce(1'b1),
    .dout(grp_fu_445_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv0_load_3_reg_565_pp0_iter2_reg),
    .din1(grp_fu_453_p1),
    .din2(grp_fu_453_p2),
    .ce(1'b1),
    .dout(grp_fu_453_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv0_load_4_reg_570_pp0_iter3_reg),
    .din1(grp_fu_461_p1),
    .din2(grp_fu_461_p2),
    .ce(1'b1),
    .dout(grp_fu_461_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln17_fu_234_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            y_fu_72 <= add_ln23_fu_240_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_72 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_load_2_reg_560 <= OutPadConv0_q2;
        OutPadConv0_load_3_reg_565 <= OutPadConv0_q1;
        OutPadConv0_load_4_reg_570 <= OutPadConv0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        OutPadConv0_load_3_reg_565_pp0_iter2_reg <= OutPadConv0_load_3_reg_565;
        OutPadConv0_load_4_reg_570_pp0_iter2_reg <= OutPadConv0_load_4_reg_570;
        OutPadConv0_load_4_reg_570_pp0_iter3_reg <= OutPadConv0_load_4_reg_570_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        tmp_s_reg_555_pp0_iter2_reg <= tmp_s_reg_555;
        y_1_reg_516_pp0_iter2_reg <= y_1_reg_516_pp0_iter1_reg;
        y_1_reg_516_pp0_iter3_reg <= y_1_reg_516_pp0_iter2_reg;
        y_1_reg_516_pp0_iter4_reg <= y_1_reg_516_pp0_iter3_reg;
        y_1_reg_516_pp0_iter5_reg <= y_1_reg_516_pp0_iter4_reg;
        y_1_reg_516_pp0_iter6_reg <= y_1_reg_516_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_i_i16_i86_i_cast_reg_486 <= conv_i_i16_i86_i_cast_fu_202_p1;
        p_cast41_cast_cast_reg_481[9 : 0] <= p_cast41_cast_cast_fu_198_p1[9 : 0];
        sext_ln23_2_cast_reg_511 <= sext_ln23_2_cast_fu_222_p1;
        sext_ln23_4_cast_reg_506 <= sext_ln23_4_cast_fu_218_p1;
        sext_ln23_6_cast_reg_501 <= sext_ln23_6_cast_fu_214_p1;
        sext_ln23_8_cast_reg_496 <= sext_ln23_8_cast_fu_210_p1;
        sext_ln23_9_cast_reg_491 <= sext_ln23_9_cast_fu_206_p1;
        tmp_s_reg_555 <= {{mul_ln23_fu_298_p2[23:8]}};
        y_1_reg_516 <= ap_sig_allocacmp_y_1;
        y_1_reg_516_pp0_iter1_reg <= y_1_reg_516;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        OutConv0_ce0_local = 1'b1;
    end else begin
        OutConv0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        OutConv0_we0_local = 1'b1;
    end else begin
        OutConv0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_ce0_local = 1'b1;
    end else begin
        OutPadConv0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_ce1_local = 1'b1;
    end else begin
        OutPadConv0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_ce2_local = 1'b1;
    end else begin
        OutPadConv0_ce2_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_ce3_local = 1'b1;
    end else begin
        OutPadConv0_ce3_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_ce4_local = 1'b1;
    end else begin
        OutPadConv0_ce4_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_fu_234_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_y_1 = y_fu_72;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv0_address0 = zext_ln25_fu_418_p1;

assign OutConv0_ce0 = OutConv0_ce0_local;

assign OutConv0_d0 = select_ln25_fu_428_p3;

assign OutConv0_we0 = OutConv0_we0_local;

assign OutPadConv0_address0 = zext_ln23_3_fu_284_p1;

assign OutPadConv0_address1 = zext_ln23_2_fu_273_p1;

assign OutPadConv0_address2 = zext_ln23_1_fu_262_p1;

assign OutPadConv0_address3 = zext_ln23_fu_251_p1;

assign OutPadConv0_address4 = zext_ln17_fu_246_p1;

assign OutPadConv0_ce0 = OutPadConv0_ce0_local;

assign OutPadConv0_ce1 = OutPadConv0_ce1_local;

assign OutPadConv0_ce2 = OutPadConv0_ce2_local;

assign OutPadConv0_ce3 = OutPadConv0_ce3_local;

assign OutPadConv0_ce4 = OutPadConv0_ce4_local;

assign add_ln23_2_fu_256_p2 = (ap_sig_allocacmp_y_1 + 9'd2);

assign add_ln23_4_fu_267_p2 = (ap_sig_allocacmp_y_1 + 9'd3);

assign add_ln23_6_fu_278_p2 = (ap_sig_allocacmp_y_1 + 9'd4);

assign add_ln23_fu_240_p2 = (ap_sig_allocacmp_y_1 + 9'd1);

assign add_ln25_1_fu_413_p2 = (zext_ln17_1_fu_384_p1 + p_cast41_cast_cast_reg_481);

assign add_ln25_2_fu_423_p2 = ($signed(Weights_load) + $signed(trunc_ln1_fu_387_p4));

assign add_ln25_fu_400_p2 = ($signed(sext_ln25_fu_396_p1) + $signed(conv_i_i16_i86_i_cast_reg_486));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign conv_i_i16_i86_i_cast_fu_202_p1 = $signed(conv_i_i16_i86_i);

assign grp_fu_437_p1 = sext_ln23_4_cast_reg_506;

assign grp_fu_437_p2 = {{tmp_s_reg_555_pp0_iter2_reg}, {8'd0}};

assign grp_fu_445_p1 = sext_ln23_6_cast_reg_501;

assign grp_fu_445_p2 = {{tmp_10_fu_330_p4}, {8'd0}};

assign grp_fu_453_p1 = sext_ln23_8_cast_reg_496;

assign grp_fu_453_p2 = {{tmp_11_fu_350_p4}, {8'd0}};

assign grp_fu_461_p1 = sext_ln23_9_cast_reg_491;

assign grp_fu_461_p2 = {{tmp_12_fu_367_p4}, {8'd0}};

assign icmp_ln17_fu_234_p2 = ((ap_sig_allocacmp_y_1 == 9'd320) ? 1'b1 : 1'b0);

assign mul_ln23_fu_298_p1 = sext_ln23_2_cast_reg_511;

assign p_cast41_cast_cast_fu_198_p1 = p_cast41_cast;

assign select_ln25_fu_428_p3 = ((tmp_fu_405_p3[0:0] == 1'b1) ? 16'd0 : add_ln25_2_fu_423_p2);

assign sext_ln23_2_cast_fu_222_p1 = $signed(sext_ln23_2);

assign sext_ln23_4_cast_fu_218_p1 = $signed(sext_ln23_4);

assign sext_ln23_6_cast_fu_214_p1 = $signed(sext_ln23_6);

assign sext_ln23_8_cast_fu_210_p1 = $signed(sext_ln23_8);

assign sext_ln23_9_cast_fu_206_p1 = $signed(sext_ln23_9);

assign sext_ln25_fu_396_p1 = trunc_ln1_fu_387_p4;

assign tmp_10_fu_330_p1 = grp_fu_437_p3;

assign tmp_10_fu_330_p4 = {{tmp_10_fu_330_p1[23:8]}};

assign tmp_11_fu_350_p1 = grp_fu_445_p3;

assign tmp_11_fu_350_p4 = {{tmp_11_fu_350_p1[23:8]}};

assign tmp_12_fu_367_p1 = grp_fu_453_p3;

assign tmp_12_fu_367_p4 = {{tmp_12_fu_367_p1[23:8]}};

assign tmp_fu_405_p3 = add_ln25_fu_400_p2[32'd16];

assign trunc_ln1_fu_387_p1 = grp_fu_461_p3;

assign trunc_ln1_fu_387_p4 = {{trunc_ln1_fu_387_p1[23:8]}};

assign zext_ln17_1_fu_384_p1 = y_1_reg_516_pp0_iter6_reg;

assign zext_ln17_fu_246_p1 = ap_sig_allocacmp_y_1;

assign zext_ln23_1_fu_262_p1 = add_ln23_2_fu_256_p2;

assign zext_ln23_2_fu_273_p1 = add_ln23_4_fu_267_p2;

assign zext_ln23_3_fu_284_p1 = add_ln23_6_fu_278_p2;

assign zext_ln23_fu_251_p1 = add_ln23_fu_240_p2;

assign zext_ln25_fu_418_p1 = add_ln25_1_fu_413_p2;

always @ (posedge ap_clk) begin
    p_cast41_cast_cast_reg_481[10] <= 1'b0;
end

endmodule //CNN_CNN_Pipeline_loop_for_ap_0
